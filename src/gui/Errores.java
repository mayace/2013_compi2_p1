/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import compiler.Error;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author ce
 */
public class Errores extends javax.swing.JDialog {

  /**
   * Creates new form Errores
   */
  public Errores(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    table = new javax.swing.JTable();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    table.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "No.", "Tipo", "Linea", "Columna", "Valor", "Mensaje"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jScrollPane1.setViewportView(table);
    load_data();

    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Errores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Errores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Errores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Errores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        Errores dialog = new Errores(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable table;
  // End of variables declaration//GEN-END:variables
  LinkedList<compiler.Error> errores = null;

  public LinkedList<Error> getErrores() {
    if (errores == null) {
      errores = new LinkedList<>();
      Error e = new Error("Error 1", new Symbol(0, 0, 0, "algo"), Error.Type.LEXIC);
      errores.add(e);
    }
    return errores;
  }

  public void load_data() {
    final LinkedList<Error> l = getErrores();
    final DefaultTableModel model = ((DefaultTableModel) table.getModel());


    while(model.getRowCount()>0){
      synchronized(model){
        model.removeRow(0);
      }
    }
    
    //agregar
    new SwingWorker<Object, Object>() {

      @Override
      protected Object doInBackground() throws Exception {
        for (int i = 0; i < l.size(); i++) {
          Error error = l.get(i);
          final Symbol sym = error.getSym();
          final int line = sym.left + 1;
          final int col = sym.right + 1;
          final Object value = sym.value;
          synchronized (model) {
//            System.out.println(i);
            model.addRow(new Object[]{i + 1, error.getType(), line, col, value, error.getMsg()});
          }
        }
        return null;
      }
    }.execute();
    
  }

  public void setErrores(LinkedList<Error> errores) {
    this.errores = errores;
    load_data();
  }
}
